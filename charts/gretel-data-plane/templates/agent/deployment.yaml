{{- if .Values.gretelAgent._enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gretel-gcc.namePrefix" . }}agent
  labels:
    app.kubernetes.io/component: agent
    {{- include "gretel-gcc.labels" . | nindent 4 }}
    {{- with .Values.gretelAgent.deploymentLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: agent
      {{- include "gretel-gcc.selectorLabels" . | nindent 6 }}
      workload: agent
  template:
    metadata:
      annotations:
        chart-config-hash: {{ toYaml .Values | sha256sum }}
        {{- with .Values.gretelAgent.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        app.kubernetes.io/component: agent
        {{- include "gretel-gcc.selectorLabels" . | nindent 8 }}
        workload: agent
        {{- with .Values.gretelAgent.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- include "gretel-gcc.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: "{{ include "gretel-gcc.gretelAgent.serviceAccount.name" . }}"
      containers:
        - name: agent
          {{- with include "gretel-gcc.gretelAgent.securityContext" . }}
          securityContext:
            {{- . | nindent 12 }}
          {{- end }}
          image: {{ .Values.gretelAgent.image.repository }}:{{ include "gretel-gcc.gretelAgent.image.tag" . }}
          imagePullPolicy: {{ .Values.gretelAgent.image.pullPolicy | quote }}
          {{- with .Values.gretelAgent.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - find "/tmp/liveness.txt" -mmin '-1' | grep -q .
            initialDelaySeconds: 30
            periodSeconds: 60
            failureThreshold: 2
          ports:
            - containerPort: 8080
              name: prometheus-port
          args: [
            "agent", "start",
            "--driver", "k8s",
            "--enable-prometheus", "true",
            "--max-workers", "{{ .Values.gretelWorkers.model.maxConcurrent }}",
            {{- with .Values.gretelConfig.projects }}
            "--project", "{{ join "," . }}"
            {{- else }}
            "--project", "all",
            {{- end }}
            "--same-org-only",
            "--auto-accept-project-invites",
            {{- if not .Values.gretelWorkers.model.enableCloudLogs }}
            "--disable-cloud-logging", "true",
            {{- end }}
          ]
          env:
            {{- with (include "gretel-gcc.gretelConfig.apiKeySecretName" .) }}
            - name: GRETEL_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ . | quote }}
                  key: GRETEL_API_KEY
            {{- end }}
            - name: GRETEL_CLUSTER_SECRET_NAME
              value: "{{ include "gretel-gcc.namePrefix" . }}cluster-secret"
            - name: GRETEL_CLUSTER_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ include "gretel-gcc.namePrefix" . }}cluster-secret"
                  key: GRETEL_CLUSTER_ID
                  optional: false  # Delay startup until the secret exists
            - name: GRETEL_ENDPOINT
              value: "{{ .Values.gretelConfig.apiEndpoint }}"
          envFrom:
          - {{- include "gretel-gcc.commonData.envFrom" . | nindent 12 }}
          - configMapRef:
              name: {{ include "gretel-gcc.namePrefix" . }}agent-env
          volumeMounts:
          - {{- include "gretel-gcc.commonData.volumeMount" . | nindent 12 }}
          - name: tmp
            mountPath: "/tmp"
      volumes:
      - {{- include "gretel-gcc.commonData.volume" . | nindent 8 }}
      - name: tmp
        emptyDir: {}
      {{- include "gretel-gcc.podPlacement" .Values.gretelAgent | nindent 6 }}
{{- end }}
