apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gretel-agent.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "gretel-agent.labels" . | nindent 4 }}
    {{- with .Values.gretelConfig.deploymentLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "gretel-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gretel-agent.selectorLabels" . | nindent 8 }}
        {{- with .Values.gretelConfig.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gretel-agent.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /metrics
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 20
            failureThreshold: 3
          ports:
            - containerPort: 8080
              name: prometheus-port
          args: [
            "agent", "start",
            "--driver", "k8s",
            "--enable-prometheus", "true",
            "--max-workers", "{{ .Values.gretelConfig.maxWorkers }}",
          ]
          envFrom:
          {{- if .Values.gretelConfig.apiKeySecretRef }}
          - secretRef:
              name: {{ .Values.gretelConfig.apiKeySecretRef }}
          {{- end }}
          - secretRef:
              name: {{ include "gretel-agent.secretName" . }}
          - configMapRef:
              name: {{ include "gretel-agent.fullname" . }}-environment-configmap
          volumeMounts:
          - name: override-cert
            mountPath: /usr/local/share/ca-certificates/
          - name: ssl-certs
            mountPath: /etc/ssl/certs
            volumeMounts:
          - name: tmp
            mountPath: "/tmp"
      volumes:
      - name: override-cert
        configMap:
          name: "{{ include "gretel-agent.extraCaCertConfigmapName" . }}"
          defaultMode: 0644
          optional: true
      - name: ssl-certs
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
